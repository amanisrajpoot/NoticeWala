name: Infrastructure CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: [ 'infrastructure/**', '.github/workflows/infrastructure-ci.yml' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'infrastructure/**', '.github/workflows/infrastructure-ci.yml' ]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Validate docker-compose.yml
      run: |
        cd infrastructure
        docker-compose config

    - name: Test infrastructure setup
      run: |
        cd infrastructure
        docker-compose up -d --build
        sleep 30
        
        # Test if services are running
        docker-compose ps
        
        # Test API health
        curl -f http://localhost:8000/health || exit 1
        
        # Clean up
        docker-compose down -v

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build images
      run: |
        cd infrastructure
        docker-compose build

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'image'
        scan-ref: 'noticewala-backend:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy-staging:
    needs: [validate, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to staging
      run: |
        echo "Deploying infrastructure to staging..."
        # Add staging deployment commands here
        # Example: Deploy to staging Kubernetes cluster

  deploy-production:
    needs: [validate, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to production
      run: |
        echo "Deploying infrastructure to production..."
        # Add production deployment commands here
        # Example: Deploy to production Kubernetes cluster
